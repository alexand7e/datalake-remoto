services:
  minio:
    container_name: minio
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    user: "1000:1000"                 # UID padrão da imagem oficial
    volumes:
      -  ${HOME}/minio/data:/data
    restart: unless-stopped

    # --- Variáveis de Ambiente ---
    # Carrega variáveis do arquivo .env localizado no diretório pai (../)
    env_file: ../.env
    environment:
      # Garanta que estas variáveis estão definidas em ../.env
      MINIO_ROOT_USER:     "${MINIO_ROOT_USER}"
      MINIO_ROOT_PASSWORD: "${MINIO_ROOT_PASSWORD}"
      MINIO_BROWSER_REDIRECT_URL: "https://minio.teasersolucoes.com.br" # Ex: https://minio.seudominio.com

    networks:
      - dlake-net      # Rede para comunicação interna do cluster de dados (Trino, Hive, etc.)
      - traefik-net    # Rede compartilhada com o proxy reverso Traefik
    # O container é acessível via DNS como 'minio' nessas redes.

    # --- Healthcheck ---
    healthcheck:
      # Usa o endpoint de verificação de saúde nativo do MinIO
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

    # --- Limites de Recursos (Opcional) ---
    deploy:
      resources:
        limits:
          memory: 1912M # Limite de memória RAM (exemplo)

    # --- Labels Traefik ---
    labels:
      - "traefik.enable=true"

      # --- Roteador: MinIO Console (Porta 9001) ---
      - "traefik.http.routers.minio-console.rule=Host(`${MINIO_DOMAIN}`) && PathPrefix(`/`)"
      - "traefik.http.routers.minio-console.entrypoints=websecure"
      - "traefik.http.routers.minio-console.tls=true"
      - "traefik.http.routers.minio-console.tls.certresolver=mytlschallenge"
      - "traefik.http.routers.minio-console.service=minio-console-svc"
      # --- AJUSTE: Aplicar middleware de segurança ---
      - "traefik.http.routers.minio-console.middlewares=minio-headers@docker"

      # --- Serviço: MinIO Console (Porta 9001) ---
      - "traefik.http.services.minio-console-svc.loadbalancer.server.port=9001"

      # --- Roteador: MinIO API (Porta 9000) ---
      - "traefik.http.routers.minio-api.rule=Host(`${MINIO_API_DOMAIN}`)"
      - "traefik.http.routers.minio-api.entrypoints=websecure"
      - "traefik.http.routers.minio-api.tls=true"
      - "traefik.http.routers.minio-api.tls.certresolver=mytlschallenge"
      - "traefik.http.routers.minio-api.service=minio-api-svc"
      # --- AJUSTE: Aplicar middleware de segurança ---
      - "traefik.http.routers.minio-api.middlewares=minio-headers@docker"

      # --- Serviço: MinIO API (Porta 9000) ---
      - "traefik.http.services.minio-api-svc.loadbalancer.server.port=9000"

      # --- Middleware: Cabeçalhos de Segurança ---
      # Define cabeçalhos de segurança comuns aplicados via 'middlewares' acima.
      # O '@docker' assume que você está usando o provedor Docker no Traefik.
      - "traefik.http.middlewares.minio-headers.headers.sslRedirect=true"
      - "traefik.http.middlewares.minio-headers.headers.stsSeconds=63072000"
      - "traefik.http.middlewares.minio-headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.minio-headers.headers.stsPreload=true"
      - "traefik.http.middlewares.minio-headers.headers.frameDeny=true"
      - "traefik.http.middlewares.minio-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.minio-headers.headers.browserXssFilter=true" # Largamente obsoleto, mas inofensivo
      - "traefik.http.middlewares.minio-headers.headers.referrerPolicy=same-origin"

# --- Definição de Volumes ---
#volumes:
  # Define o volume nomeado para armazenamento persistente do MinIO
#  minio_data:
#    driver: local # Usa o driver local padrão (armazena no host Docker)

# --- Definição de Redes ---
networks:
  # Declara redes externas. Devem ser criadas manualmente ANTES de rodar 'docker compose up'.
  # Exemplo: docker network create dlake-net && docker network create traefik-net
  dlake-net:
    external: true
  traefik-net:
    external: true
